Hpajaxprc - compact RPC library for high-performance AJAX applications.

Hpajaxrpc library consists of a single javascript file. It provides
the following classes:
- JsonRpc
  A tiny wrapper around XMLHttpRequest, which deals with JSON-encoded requests
  and responses. Requests and responses can contain arbitrary data structures,
  which can be serialized without loss with JSON.

- QueuedRpc
  Queues incoming RPCs, so they are executed serially over a base RPC
  implementation. Use this class for serial execution of multiple
  RPCs over a single base XMLHttpRequest.

- BatchedRpc
  Groups incoming RPCs in batches before forwarding them to base RPC
  implementation. RPC batching is a well-known approach for minimizing overhead
  associated with each RPC. This overhead may include:
  - connection establishing to the server;
  - per-RPC authentication;
  - per-RPC serialization overhead (for instance, HTTP headers);

- RateLimitedRpc
  Limits the rate of RPCs by discarding incoming RPCs if the time since
  previously executed RPC doesn't exceed given interval. Use this class if you
  need checkpointing or updating application's state on a potentially frequent
  event such as keypress, mouseclick of mousemove, but don't want overloading
  your servers with RPC storm.

The library was designed with flexibility and extensibility in mind.

QueuedRpc, BatchedRpc and RateLimitedRpc instances can be easily combined
in any order and depth through the corresponding base_rpc_call arguments.

It is easy to hook up per-RPC authentication or status check at any level
by inspecting and altering arguments passed to base_rpc_call callbacks.

Though the library encourages JSON encoding for RPCs via JsonRpc, it is easy
to switch to other RPC encodings by replacing JsonRpc instances with
the corresponding implementation.

Read more about design desicions behind the API of the library
at http://dev.by/blog/40345 (in Russian).
